not prototype, but model
  prototype would be concurrent/destributed in the normal way
  model is single process, single thread, with global notion of time
    but possibly stochastic (or even antagonistic) scheduler

possible approach
  model
    TLA+
    see newcombe-slides.pdf

not model for verification
  but for learning, understanding *intent*, examining obvious corner cases
  
  model to answer the question:
    what is original and interesting about
      the approach in the paper
    what's different from classical approaches?
      from hyperdex, h-store?
      from voltdb?
  
  explicit scheduling
    model concurrent transactions in a single-threaded env

  other verification and testing tools
    http://concuerror.com/
    finding-race-conditions.pdf -- QuickCheck and PULSE
    http://research.microsoft.com/en-us/projects/chess/

generate graphviz diagram of space-time

read
  hstore-lookingglass.pdf
  p378-mohan.pdf
  paxos-simple.pdf
  spanner.pdf

talk to:
  R. Escriva about h-store?
  palvaro, kellabyte, edward r (all mentioned calvin on twitter)

presentation ideas
  dist sys astronomy
  https://speakerdeck.com/mrb/papers-we-love-a-unified-theory-of-garbage-collection
  
Is this relevant for modeling?
  http://aphyr.com/posts/309-knossos-redis-and-linearizability

look at secretlivesofdata
